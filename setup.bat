@echo off
REM Random Wallpaper Extension - Setup Script for Windows
REM This script helps you set up the extension quickly

echo.
echo ========================================
echo üé® Random Wallpaper Extension Setup
echo ========================================
echo.

REM Check if npm is installed
where npm >nul 2>nul
if %errorlevel% neq 0 (
    echo ‚ùå Error: npm is not installed
    echo Please install Node.js and npm first: https://nodejs.org/
    echo.
    pause
    exit /b 1
)

REM Get npm version
for /f "delims=" %%i in ('npm --version') do set npm_version=%%i
echo ‚úÖ npm found: %npm_version%
echo.

REM Install dependencies
echo üì¶ Installing dependencies...
call npm install

if %errorlevel% neq 0 (
    echo.
    echo ‚ùå Failed to install dependencies
    pause
    exit /b 1
)

echo.
echo ‚úÖ Dependencies installed!
echo.

REM Ask user for obfuscation level
echo ========================================
echo üîí Build Configuration
echo ========================================
echo.
echo Select obfuscation level:
echo   1) Regular (no obfuscation) - Recommended for development
echo   2) Light - Basic obfuscation for testing
echo   3) Medium - Balanced obfuscation
echo   4) Heavy - Strong obfuscation
echo   5) Fun - Maximum obfuscation with fun mode
echo.
set /p obfuscation_choice="Enter your choice (1-5, default: 1): "

REM Set obfuscation level based on user choice
if "%obfuscation_choice%"=="2" (
    set OBFUSCATION_LEVEL=light
    echo ‚úÖ Selected: Light obfuscation
) else if "%obfuscation_choice%"=="3" (
    set OBFUSCATION_LEVEL=medium
    echo ‚úÖ Selected: Medium obfuscation
) else if "%obfuscation_choice%"=="4" (
    set OBFUSCATION_LEVEL=heavy
    echo ‚úÖ Selected: Heavy obfuscation
) else if "%obfuscation_choice%"=="5" (
    set OBFUSCATION_LEVEL=fun
    echo ‚úÖ Selected: Fun obfuscation (maximum + fun mode)
) else (
    set OBFUSCATION_LEVEL=regular
    echo ‚úÖ Selected: Regular build (no obfuscation)
)

echo.

REM Build the extension
echo üî® Building extension...
call npm run build

if %errorlevel% neq 0 (
    echo.
    echo ‚ùå Build failed
    pause
    exit /b 1
)

echo.
echo ‚úÖ Build successful!
echo.

REM Final instructions
echo ========================================
echo üéâ Setup Complete!
echo ========================================
echo.
echo Next steps:
echo.
echo 1. Load the extension in your browser:
echo.
echo    Chrome/Brave/Edge:
echo      ‚Üí Navigate to chrome://extensions/
echo      ‚Üí Enable 'Developer mode' (top right toggle)
echo      ‚Üí Click 'Load unpacked'
echo      ‚Üí Select the 'dist' folder in this directory
echo.
echo    Firefox:
echo      ‚Üí Navigate to about:debugging#/runtime/this-firefox
echo      ‚Üí Click 'Load Temporary Add-on'
echo      ‚Üí Select 'dist/manifest.json' file
echo.
echo 2. Open a new tab - you'll see 20 beautiful fallback images!
echo.
echo 3. (Optional) Configure API keys for more variety:
echo    ‚Üí Right-click extension icon ‚Üí Options
echo    ‚Üí Add API keys from:
echo      ‚Ä¢ Unsplash: https://unsplash.com/developers
echo      ‚Ä¢ Pexels: https://www.pexels.com/api/
echo    ‚Üí Test keys and save
echo    ‚Üí Extension will fetch 30-80 fresh images immediately!
echo.
echo ========================================
echo ‚ú® Features:
echo ========================================
echo    ‚Ä¢ Works immediately (no API keys required)
echo    ‚Ä¢ 20 fallback images included
echo    ‚Ä¢ Auto-refresh every 6 hours
echo    ‚Ä¢ Digital clock display
echo    ‚Ä¢ Configurable settings via Options page
echo    ‚Ä¢ Permanent cache mode for storing images forever
echo    ‚Ä¢ Optimized performance with smart caching
echo.
echo ========================================
echo üîí Build Information:
echo ========================================
if not "%OBFUSCATION_LEVEL%"=="regular" (
    echo    ‚Ä¢ Obfuscation: %OBFUSCATION_LEVEL%
    echo    ‚Ä¢ Code protection enabled for deployment
) else (
    echo    ‚Ä¢ Standard build (readable source code)
    echo    ‚Ä¢ Ideal for development and debugging
)
echo.
echo ========================================
echo üí° Rebuild Tips:
echo ========================================
echo    To rebuild with different obfuscation:
echo    Set OBFUSCATION_LEVEL environment variable:
echo      ‚Ä¢ set OBFUSCATION_LEVEL=regular ^&^& npm run build
echo      ‚Ä¢ set OBFUSCATION_LEVEL=light ^&^& npm run build
echo      ‚Ä¢ set OBFUSCATION_LEVEL=medium ^&^& npm run build
echo      ‚Ä¢ set OBFUSCATION_LEVEL=heavy ^&^& npm run build
echo      ‚Ä¢ set OBFUSCATION_LEVEL=fun ^&^& npm run build
echo.
echo ========================================
echo üìö Documentation:
echo ========================================
echo    ‚Ä¢ QUICKSTART.md - Quick setup guide
echo    ‚Ä¢ README.md - Full documentation
echo    ‚Ä¢ ARCHITECTURE.md - Technical details
echo    ‚Ä¢ CHANGELOG.md - Version history
echo.
echo Happy browsing! üöÄ
echo.
pause
